# Used to build the address of the server 
clusterDomain: cluster.local

# Default values for the sender component.
sender: 
  # Defines if the sender should be enabled
  enabled: true
  config:
    # Enable the sender to output the results in JSON format
    jsonOutput: true
    # Enable metrics endpoint
    metrics: true
    # Runs the sender forever
    forever: true
    # Enables metrics that are suitable for the Grafana Node Graph Panel
    nodeGraph: true
    # responder address and port. By default it will use the responder address and port
    responder:
      address: ""
      port: "20001"

  daemonset: true

  replicaCount: 1

  hostNetwork: false

  image:
    repository: dariomader/twampy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.0.2"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be used
    enabled: false
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podMonitor: 
    enabled: true
    annotations: {}
    # Relabels the pod monitor to use the node name instead of the pod name
    relabelToNode: true

  podSecurityContext:
    fsGroup: 65532
    runAsUser: 65532
    runAsGroup: 65532

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true

  service:
    type: ClusterIP
    port: 80

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  containerArgs: {}


# Default values for the responder component.
responder: 

  # Defines if the responer should be enabled
  enabled: true

  daemonset: false

  replicaCount: 1

  hostNetwork: false

  image:
    repository: dariomader/twampy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.0.2"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be used
    enabled: false
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    fsGroup: 65532
    runAsUser: 65532
    runAsGroup: 65532

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true

  # Only takes effect when âˆ‘ is false
  service:
    type: ClusterIP
    port: 20001


  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  containerArgs: {}


